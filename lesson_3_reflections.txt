When would you want to use a remote repository rather than keeping all your work local?
If you want to work together with other developers or just want to share your code.
Also you can store your data on a web repository, so it can be accessed anywhere.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Other people may have been working on the code. It would be possible that parts of code you have written locally won't work anymore.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
a fork is a remnote copy of a repository on git hub, whereas a clone is a local copy of a git hub repository. A branch is just a different state of the repository, not a direct copy.
Forks are used if your repository should be stored on git hub anyway. Clones can be used if you for example only want to word on that repository locally.

What is the benefit of having a copy of the last known state of the remote stored locally?
Git recognizes changes that are made locally and in the remote repository, so none of the changes are overwritten when commiting. Differences are spotted by comparing the local copy to the remote repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would split the tasks in different objectives. Each party should develop their own parts which aren't logically connected yet.
It would be harder to find the tasks, so that merging them together in one project would work properly.